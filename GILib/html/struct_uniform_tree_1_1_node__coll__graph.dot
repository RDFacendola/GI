digraph "gi_lib::UniformTree::Node"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{gi_lib::UniformTree\l::Node\n||+ Node()\l+ PushDown()\l+ PullUp()\l+ SetParent()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +volume_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{gi_lib::VolumeComponent\n||+ ~VolumeComponent()\l+ TestAgainst()\l+ TestAgainst()\l+ TestAgainst()\l+ OnChanged()\l+ GetTypes()\l# NotifyChange()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classgi__lib_1_1_volume_component.html",tooltip="Contains informations about an axis-aligned bounding box surrounding the node. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{gi_lib::Component\n||+ Component()\l+ Component()\l+ ~Component()\l+ operator=()\l+ AddComponent()\l+ RemoveComponent()\l+ GetComponent()\l+ GetComponent()\l+ GetComponents()\l+ GetComponents()\l+ GetTypes()\l+ Dispose()\l+ OnRemoved()\l+ Create()\l+ Create()\l# Initialize()\l# Finalize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classgi__lib_1_1_component.html",tooltip="Represents a component of a component-based entity. A component-based entity is an abstract object wh..."];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +on_bounds_changed\l_listener_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{unique_ptr\< gi_lib\l::Listener \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +parent_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{gi_lib::UniformTree\n||+ UniformTree()\l+ ~UniformTree()\l+ AddVolume()\l+ RemoveVolume()\l+ GetIntersections()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classgi__lib_1_1_uniform_tree.html",tooltip="Represents an uniform tree. The tree subdivides its domain in equally sized cells recursively..."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{gi_lib::IVolumeHierarchy\n||+ ~IVolumeHierarchy()\l+ AddVolume()\l+ RemoveVolume()\l+ GetIntersections()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classgi__lib_1_1_i_volume_hierarchy.html",tooltip="Base interface for volume hierarchy. Volumes added to the hierarchy must be manually removed upon des..."];
}
