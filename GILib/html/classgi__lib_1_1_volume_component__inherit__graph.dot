digraph "gi_lib::VolumeComponent"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{gi_lib::VolumeComponent\n||+ ~VolumeComponent()\l+ TestAgainst()\l+ TestAgainst()\l+ TestAgainst()\l+ OnChanged()\l+ GetTypes()\l# NotifyChange()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{gi_lib::Component\n||+ Component()\l+ Component()\l+ ~Component()\l+ operator=()\l+ AddComponent()\l+ RemoveComponent()\l+ GetComponent()\l+ GetComponent()\l+ GetComponents()\l+ GetComponents()\l+ GetTypes()\l+ Dispose()\l+ OnRemoved()\l+ Create()\l+ Create()\l# Initialize()\l# Finalize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classgi__lib_1_1_component.html",tooltip="Represents a component of a component-based entity. A component-based entity is an abstract object wh..."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{gi_lib::BaseLightComponent\n||+ BaseLightComponent()\l+ BaseLightComponent()\l+ GetTypes()\l+ GetColor()\l+ SetColor()\l# Initialize()\l# Finalize()\l# GetTransformComponent()\l# ComputeBounds()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classgi__lib_1_1_base_light_component.html",tooltip="Base class for each light. "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{gi_lib::DirectionalLight\lComponent\n||+ DirectionalLightComponent()\l+ TestAgainst()\l+ TestAgainst()\l+ TestAgainst()\l+ GetTypes()\l+ GetDirection()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classgi__lib_1_1_directional_light_component.html",tooltip="Represents a single directional light. A directional light is a light that has no position and irradi..."];
  Node3 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{gi_lib::PointLightComponent\n|+ kDefaultCutoff\l|+ PointLightComponent()\l+ PointLightComponent()\l+ GetTypes()\l+ TestAgainst()\l+ TestAgainst()\l+ TestAgainst()\l+ GetConstantFactor()\l+ SetConstantFactor()\l+ GetLinearFactor()\l+ SetLinearFactor()\l+ GetQuadraticFactor()\l+ SetQuadraticFactor()\l+ GetCutoff()\l+ SetCutoff()\l+ SetRadius()\l+ GetPosition()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classgi__lib_1_1_point_light_component.html",tooltip="Represents a single point light. A point light is a light that has a position and irradiates light in..."];
  Node3 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{gi_lib::SpotLightComponent\n||+ SpotLightComponent()\l+ SpotLightComponent()\l+ GetTypes()\l+ TestAgainst()\l+ TestAgainst()\l+ TestAgainst()\l+ GetLightConeAngle()\l+ SetLightConeAngle()\l+ GetPenumbraConeAngle()\l+ SetPenumbraConeAngle()\l+ GetFalloff()\l+ SetFalloff()\l+ GetConstantFactor()\l+ SetConstantFactor()\l+ GetLinearFactor()\l+ SetLinearFactor()\l+ GetQuadraticFactor()\l+ SetQuadraticFactor()\l+ GetPosition()\l+ GetDirection()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classgi__lib_1_1_spot_light_component.html",tooltip="Represents a single spot light. A spotlight is a light that irradiates from one point towards a direc..."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{gi_lib::MeshComponent\n||+ MeshComponent()\l+ MeshComponent()\l+ GetMesh()\l+ GetMesh()\l+ SetMesh()\l+ TestAgainst()\l+ TestAgainst()\l+ TestAgainst()\l+ GetTypes()\l# Initialize()\l# Finalize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classgi__lib_1_1_mesh_component.html",tooltip="Mesh component. "];
}
